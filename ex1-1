#lang sicp
10 ;10
(+ 5 3 4) ;12
(- 9 1) ;8
(/ 6 2) ;3
(+ (* 2 4) (- 4 6)) ;6
(define a 3) ;
(define b (+ a 1)) ;
(+ a b (* a b)) ;19
(= a b) ;#f
(if (and (> b a) (< b (* a b)))
    b
    a) ;((> b a) == (> (+ a 1) a)) >> #t, (< b (* a b)) == (< (+ a 1) (* a (+ a 1))) >> #t) ==> (and #t #t) >> #t ==> b >> 4


(cond ((= a 4) 6)
      ((= b 4) (+ 6 7 a))
      (else 25)) ;clause1 (= a 4) >> #f, clause2 (= b 4) >> #t ==> (+ 6 7 3) >> 16

(+ 2 (if (> b a) b a)) ;(> b a) >> #t ==> b >> 4 ==> (+ 2 4) >> 6

(* (cond ((> a b) a)
         ((< a b) b)
         (else -1))
   (+ a 1)) ;clause1 >> #f, clause2 >> #t ==> b >> 4 ==> (* 4 4) >> 16